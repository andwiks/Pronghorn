<?php

/**
 * Implements hook_services_resources().
 */
function apps_services_v2_services_services_resources() {
    return array(
        'services_v2' => array(
            'actions' => array(
                'sepulsa' => array(
                    'help' => 'List all sepulsa operator data',
                    'callback' => 'apps_services_v2_services_sepulsa_operator_list',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                    'documentation callback' => 'apps_services_v2_services_sepulsa_operator_list_doc',
                    'access callback' => 'services_access_menu',
                    'args' => array(
                      array(
                        'name' => 'source',
                        'type' => 'string',
                        'description' => 'the source of the request',
                        'source' => array(
                          'data' => 'source',
                          'param' => 'source',
                        ),
                        'optional' => FALSE,
                        'http_method' => 'POST',
                      ),
                    ),
                ),
                'product' => array(
                    'help' => 'List sepulsa product based on type',
                    'callback' => 'apps_services_v2_services_sepulsa_product_index',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                    'documentation callback' => 'apps_services_v2_services_sepulsa_product_index_doc',
                    'access callback' => 'services_access_menu',
                    'args' => array(
                      array(
                        'name' => 'type',
                        'type' => 'string',
                        'description' => 'the source of the request',
                        'source' => array(
                          'data' => 'type',
                          'param' => 'type',
                        ),
                        'default value' => NULL,
                        'optional' => TRUE,
                        'http_method' => 'POST',
                      ),
                      array(
                        'name' => 'source',
                        'type' => 'string',
                        'description' => 'the source of the request',
                        'source' => array(
                          'data' => 'source',
                          'param' => 'source',
                        ),
                        'optional' => FALSE,
                        'http_method' => 'POST',
                      ),
                    ),
                ),
                'cart' => array(
                  'help' => "Retrieve product list inside customer's shopping cart.",
                  'callback' => 'apps_services_v2_services_resource_index',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'apps_services_v2_services_resource_index_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'cart_add' => array(
                  'help' => "Add the specified product to a customer's shopping cart.",
                  'callback' => 'apps_services_v2_services_resource_add',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'apps_services_v2_services_resource_add_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'product',
                      'type' => 'array',
                      'description' => 'The product data to be added',
                      'source' => array(
                        'data' => 'product',
                        'param' => 'product'
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'cart_add_multiple' => array(
                  'help' => "Add multiple specified product to a customer's shopping cart.",
                  'callback' => 'apps_services_v2_services_resource_add_multiple',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'apps_services_v2_services_resource_add_multiple_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'products',
                      'type' => 'array',
                      'description' => 'The product data to be added',
                      'source' => array(
                        'data' => 'products',
                        'param' => 'products'
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'coupon_redeem' => array(
                  'help' => "Redeem coupon code.",
                  'callback' => 'apps_services_v2_services_resource_coupon_redeem',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'apps_services_v2_services_resource_coupon_redeem_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'code',
                      'type' => 'string',
                      'description' => 'Coupon code',
                      'source' => array(
                        'data' => 'code',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'coupon_remove' => array(
                  'help' => "Remove coupon code from an order.",
                  'callback' => 'apps_services_v2_services_resource_coupon_remove',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'apps_services_v2_services_resource_coupon_remove_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'coupon_id',
                      'type' => 'string',
                      'description' => 'Coupon id',
                      'source' => array(
                        'data' => 'coupon_id',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'saved_card' => array(
                  'help' => "Get token from veritrans to get saved card.",
                  'callback' => 'apps_services_v2_services_get_saved_card',
                  'access callback' => 'user_is_logged_in',
                  'documentation callback' => 'apps_services_v2_services_get_saved_card_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
            ),
        ),
    );
}

/**
 * Function apps_services_v2_services_sepulsa_operator_list_doc().
 *
 * Documentation callback for sepulsa operator list.
 */
function apps_services_v2_services_sepulsa_operator_list_doc() {
  global $base_url;
  $response = '
    {
      "status": true,
      "message": "",
      "data": [
        {
          "id": 22,
          "operator": "3",
          "prefix": [
            "0895",
            "0896",
            "0897",
            "0898",
            "0899"
          ],
          "cardtype": {
            "id": 28,
            "type": "Three"
          },
          "packet": [
            {
              "id": "180",
              "title": "Rp 30.000",
              "price": "30000",
              "desc": ""
            },
            {
              "id": "33",
              "title": "Rp 50.000",
              "price": "50000",
              "desc": ""
            },
            {
              "id": "34",
              "title": "Rp 100.000",
              "price": "100000",
              "desc": ""
            }
          ]
        },
        {
          "id": 21,
          "operator": "Axis",
          "prefix": [
            "0831",
            "0832",
            "0838"
          ],
          "cardtype": {
            "id": 10,
            "type": "Axis"
          },
          "packet": [
            {
              "id": "14",
              "title": "Rp 25.000",
              "price": "25000",
              "desc": ""
            },
            {
              "id": "15",
              "title": "Rp 50.000",
              "price": "50000",
              "desc": ""
            },
            {
              "id": "16",
              "title": "Rp 100.000",
              "price": "100000",
              "desc": ""
            }
          ]
        },
        {
          "id": 26,
          "operator": "Bolt",
          "prefix": [
            "9991",
            "9992",
            "9988"
          ],
          "cardtype": {
            "id": 6141,
            "type": "Bolt"
          },
          "packet": [
            {
              "id": "176",
              "title": "Rp 50.000",
              "price": "50000",
              "desc": ""
            },
            {
              "id": "177",
              "title": "Rp 100.000",
              "price": "100000",
              "desc": ""
            },
            {
              "id": "182",
              "title": "Rp 200.000",
              "price": "200000",
              "desc": ""
            }
          ]
        },
        {
          "id": 23,
          "operator": "Indosat",
          "prefix": [
            "0814",
            "0815",
            "0816",
            "0855",
            "0856",
            "0857",
            "0858"
          ],
          "cardtype": {
            "id": 27,
            "type": "Indosat"
          },
          "packet": [
            {
              "id": "241",
              "title": "Paket Data 1 GB",
              "price": "30000",
              "desc": "<b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Harga :</b> Rp 30.000,- <b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Masa Aktif :</b> 30 hari <b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Kuota :</b> 1 GB"
            },
            {
              "id": "243",
              "title": "Paket Data 2 GB",
              "price": "55000",
              "desc": "<b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Harga :</b> Rp 55.000,- <b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Masa Aktif :</b> 30 hari <b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Kuota :</b> 2 GB"
            },
            {
              "id": "245",
              "title": "Paket Data 5 GB",
              "price": "125000",
              "desc": "<b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Harga :</b> Rp 125.000,- <b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Masa Aktif :</b> 30 hari <b style=\"font-weight:bold; text-decoration: underline; text-transform: uppercase;\">Kuota :</b> 5 GB"
            },
            {
              "id": "28",
              "title": "Rp 25.000",
              "price": "25000",
              "desc": ""
            },
            {
              "id": "29",
              "title": "Rp 50.000",
              "price": "50000",
              "desc": ""
            },
            {
              "id": "30",
              "title": "Rp 100.000",
              "price": "100000",
              "desc": ""
            },
            {
              "id": "257",
              "title": "RP 150.000",
              "price": "150000",
              "desc": ""
            }
          ]
        },
        {
          "id": 24,
          "operator": "Smartfren",
          "prefix": [
            "0881",
            "0882",
            "0883",
            "0884",
            "0885",
            "0886",
            "0887",
            "0888",
            "0889"
          ],
          "cardtype": {
            "id": 29,
            "type": "Smartfren"
          },
          "packet": [
            {
              "id": "37",
              "title": "Rp 25.000",
              "price": "25000",
              "desc": ""
            },
            {
              "id": "38",
              "title": "Rp 50.000",
              "price": "50000",
              "desc": ""
            },
            {
              "id": "39",
              "title": "Rp 100.000",
              "price": "100000",
              "desc": ""
            }
          ]
        },
        {
          "id": 19,
          "operator": "Telkomsel",
          "prefix": [
            "0811",
            "0812",
            "0813",
            "0821",
            "0822",
            "0823",
            "0851",
            "0852",
            "0853"
          ],
          "cardtype": {
            "id": 3,
            "type": "Telkomsel"
          },
          "packet": [
            {
              "id": "4",
              "title": "Rp 25.000",
              "price": "25000",
              "desc": ""
            },
            {
              "id": "5",
              "title": "Rp 50.000",
              "price": "50000",
              "desc": ""
            },
            {
              "id": "6",
              "title": "Rp 100.000",
              "price": "100000",
              "desc": ""
            }
          ]
        },
        {
          "id": 20,
          "operator": "XL",
          "prefix": [
            "0817",
            "0818",
            "0819",
            "0859",
            "0877",
            "0878",
            "0879"
          ],
          "cardtype": {
            "id": 2,
            "type": "XL"
          },
          "packet": [
            {
              "id": "2",
              "title": "Rp 25.000",
              "price": "25000",
              "desc": ""
            },
            {
              "id": "12",
              "title": "Rp 50.000",
              "price": "50000",
              "desc": ""
            },
            {
              "id": "13",
              "title": "Rp 100.000",
              "price": "100000",
              "desc": ""
            }
          ]
        }
      ]
    }
  ';
  $element = array(
    '#name' => 'Sepulsa Get Operator List',
    '#description' => 'Get Operator and Prefix Data from Sepulsa.',
    '#auth' => FALSE,
    '#path' => 'services_v2/sepulsa',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/sepulsa.json<br />'
    . 'POST data application/json: { "source" : "android" }',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
	  'missing_argument' => array(
        '#question' => '401 Unauthorized : Missing required argument',
        '#description' => 'When drupal detect that the user missed some of the input required.',
        '#response' => '
        [
          "Missing required argument"
        ]',
      ),
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => 'Drupal server can not handle the request. Drupal will output nothing.',
        '#response' => '',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_sepulsa_product_index_doc().
 *
 * Documentation callback for sepulsa product list.
 */
function apps_services_v2_services_sepulsa_product_index_doc() {
  global $base_url;
  $response = '
    {
      "status": true,
      "message": "",
      "data": [
        {
          "product_name": "electricity",
          "product": {
            "title": "Listrik Prabayar",
            "id": 10258,
            "product_type": [
              {
                "id": 106,
                "name": "Rp 50.000"
              },
              {
                "id": 107,
                "name": "Rp 100.000"
              },
              {
                "id": 119,
                "name": "Rp 200.000"
              },
              {
                "id": 155,
                "name": "Rp 500.000"
              }
            ],
            "quantity": 1
          }
        }
      ]
    }
  ';
  $element = array(
    '#name' => 'Sepulsa Get Product List',
    '#description' => 'Get Sepulsa Product Data based on type.',
    '#auth' => FALSE,
    '#path' => 'services_v2/product',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/product.json<br />'
    . 'POST data application/json: { "source" : "android", "type": "electricity" }',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
	  'missing_argument' => array(
        '#question' => '401 Unauthorized : Missing required argument',
        '#description' => 'When drupal detect that the user missed some of the input required.',
        '#response' => '
        [
          "Missing required argument"
        ]',
      ),
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => 'Drupal server can not handle the request. Drupal will output nothing.',
        '#response' => '',
      ),
      'type_not_found' => array(
        '#question' => '406 Not Acceptable : @type product tidak diketemukan.',
        '#description' => 'Drupal server products with the type defined.',
        '#response' => '
        [
            "@type product tidak diketemukan."
        ]',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_resource_add_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_resource_add_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "",
    "data": {
      "type": "mobile_prepaid",
      "order_id": "165212",
      "quantity": 1,
      "data": [],
      "line_item_id": "668474",
      "line_item_label": "SMPT25",
      "created": 1455853677,
      "changed": 1455853677,
      "commerce_product": {
        "revision_id": "417",
        "sku": "SMPT25",
        "title": "Rp 25.000",
        "revision_uid": "13957",
        "status": "1",
        "log": "",
        "revision_timestamp": "1445132516",
        "data": false,
        "product_id": "4",
        "type": "pulsa",
        "language": "und",
        "uid": "1",
        "created": "1419919510",
        "changed": "1445132516",
        "commerce_price": {
          "und": [
            {
              "amount": "25000",
              "currency_code": "IDR",
              "data": {
                "components": []
              }
            }
          ]
        },
        "field_api_provider": {
          "und": [
            {
              "value": "kraken"
            }
          ]
        },
        "field_credit_amount": {
          "und": [
            {
              "value": "25000"
            }
          ]
        },
        "field_package_code": {
          "und": [
            {
              "value": "26"
            }
          ]
        },
        "field_data_packet": {
          "und": [
            {
              "value": "0"
            }
          ]
        },
        "field_deskripsi": [],
        "rdf_mapping": []
      },
      "commerce_display_path": "",
      "commerce_unit_price": {
        "amount": "25000",
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": "25000",
                "currency_code": "IDR",
                "data": {
                  "components": []
                }
              },
              "included": true
            }
          ]
        }
      },
      "field_phone_number": "0812111111",
      "commerce_total": {
        "amount": 25000,
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": 25000,
                "currency_code": "IDR",
                "data": {
                  "components": []
                }
              },
              "included": true
            }
          ]
        }
      },
      "field_topup_status": "7",
      "field_topup_data": [
        ""
      ],
      "field_line_item_status": "pending"
    }
  }
  ';
  $element = array(
    '#name' => t('Cart Add Content'),
    '#description' => t("Add new shopping cart content."),
    '#auth' => TRUE,
    '#path' => 'services_v2/cart_add',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/cart_add.json<br />
    POST topup data application/json: { "source" : "android", "product": { "product_id": 5, "type": "mobile_prepaid", "quantity": 1, "fields": {"field_phone_number":"08122545393"} } } <br />
    POST coupon data application/json: { "source" : "android", "product": { "product_id": 11, "type": "coupon", "quantity": 1 } } <br />
    ',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
      'missing_cart' => array(
        '#question' => '406 Not Acceptable: Cart missing',
        '#description' => t('Unable to get shopping cart. Check user session.'),
        '#response' => '
        [
            "Cart missing"
        ]',
      ),
      'product_required' => array(
        '#question' => '406 Not Acceptable: Product is required',
        '#description' => t('Default error message when add new content into cart. Possible invalid product id input.'),
        '#response' => '
        [
            "Product is required"
        ]',
      ),
      'product_not_found' => array(
        '#question' => '406 Not Acceptable: Product not found',
        '#description' => t('Invalid product id input. System can not recognize product based on product id input.'),
        '#response' => '
        [
            "Product not found"
        ]',
      ),
      'unable_to_add' => array(
        '#question' => '406 Not Acceptable: Unable to add product',
        '#description' => t('Unable to add content into shopping cart. Possible because unable to pass certain rules, such as product price rules.'),
        '#response' => '
        [
            "Unable to add product"
        ]',
      ),
      'invalid_product_fields' => array(
        '#question' => '406 Not Acceptable: Invalid product fields',
        '#description' => t('Product field input is invalid.'),
        '#response' => '
        [
            "Invalid product fields"
        ]',
      ),
      'invalid_line_item' => array(
        '#question' => '406 Not Acceptable: Invalid Line Item',
        '#description' => t('Unable to get order object. Check user session.'),
        '#response' => '
        [
            "Invalid Line Item"
        ]',
      ),
      'missing_requirement' => array(
        '#question' => '401 Unauthorized: Missing required argument product',
        '#description' => t('Required product argument: product id.'),
        '#response' => '
        [
            "Missing required argument product"
        ]',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_resource_add_multiple_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_resource_add_multiple_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "",
    "data": {
      "type": "mobile_prepaid",
      "order_id": "165212",
      "quantity": 1,
      "data": [],
      "line_item_id": "668474",
      "line_item_label": "SMPT25",
      "created": 1455853677,
      "changed": 1455853677,
      "commerce_product": {
        "revision_id": "417",
        "sku": "SMPT25",
        "title": "Rp 25.000",
        "revision_uid": "13957",
        "status": "1",
        "log": "",
        "revision_timestamp": "1445132516",
        "data": false,
        "product_id": "4",
        "type": "pulsa",
        "language": "und",
        "uid": "1",
        "created": "1419919510",
        "changed": "1445132516",
        "commerce_price": {
          "und": [
            {
              "amount": "25000",
              "currency_code": "IDR",
              "data": {
                "components": []
              }
            }
          ]
        },
        "field_api_provider": {
          "und": [
            {
              "value": "kraken"
            }
          ]
        },
        "field_credit_amount": {
          "und": [
            {
              "value": "25000"
            }
          ]
        },
        "field_package_code": {
          "und": [
            {
              "value": "26"
            }
          ]
        },
        "field_data_packet": {
          "und": [
            {
              "value": "0"
            }
          ]
        },
        "field_deskripsi": [],
        "rdf_mapping": []
      },
      "commerce_display_path": "",
      "commerce_unit_price": {
        "amount": "25000",
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": "25000",
                "currency_code": "IDR",
                "data": {
                  "components": []
                }
              },
              "included": true
            }
          ]
        }
      },
      "field_phone_number": "0812111111",
      "commerce_total": {
        "amount": 25000,
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": 25000,
                "currency_code": "IDR",
                "data": {
                  "components": []
                }
              },
              "included": true
            }
          ]
        }
      },
      "field_topup_status": "7",
      "field_topup_data": [
        ""
      ],
      "field_line_item_status": "pending"
    }
  }
  ';
  $element = array(
    '#name' => t('Cart Add Multiple Content'),
    '#description' => t("Add multiple new shopping cart content."),
    '#auth' => TRUE,
    '#path' => 'services_v2/cart_add_multiple',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/cart_add_multiple.json<br />
    POST topup data application/json: { "source" : "android", "product": [ { "product_id": 5, "type": "mobile_prepaid", "quantity": 1, "fields": {"field_phone_number":"08122545393"}},{ "product_id": 6, "type": "mobile_prepaid", "quantity": 1, "fields": {"field_phone_number":"08122545393"} } ] } <br />
    POST coupon data application/json: { "source" : "android", "product": [ { "product_id": 11, "type": "coupon", "quantity": 1 }, { "product_id": 11, "type": "coupon", "quantity": 1 } ] } <br />
    ',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
      'missing_cart' => array(
        '#question' => '406 Not Acceptable: Cart missing',
        '#description' => t('Unable to get shopping cart. Check user session.'),
        '#response' => '
        [
            "Cart missing"
        ]',
      ),
      'product_required' => array(
        '#question' => '406 Not Acceptable: Product is required',
        '#description' => t('Default error message when add new content into cart. Possible invalid product id input.'),
        '#response' => '
        [
            "Product is required"
        ]',
      ),
      'product_not_found' => array(
        '#question' => '406 Not Acceptable: Product not found',
        '#description' => t('Invalid product id input. System can not recognize product based on product id input.'),
        '#response' => '
        [
            "Product not found"
        ]',
      ),
      'unable_to_add' => array(
        '#question' => '406 Not Acceptable: Unable to add product',
        '#description' => t('Unable to add content into shopping cart. Possible because unable to pass certain rules, such as product price rules.'),
        '#response' => '
        [
            "Unable to add product"
        ]',
      ),
      'invalid_product_fields' => array(
        '#question' => '406 Not Acceptable: Invalid product fields',
        '#description' => t('Product field input is invalid.'),
        '#response' => '
        [
            "Invalid product fields"
        ]',
      ),
      'invalid_line_item' => array(
        '#question' => '406 Not Acceptable: Invalid Line Item',
        '#description' => t('Unable to get order object. Check user session.'),
        '#response' => '
        [
            "Invalid Line Item"
        ]',
      ),
      'missing_requirement' => array(
        '#question' => '401 Unauthorized: Missing required argument product',
        '#description' => t('Required product argument: product id.'),
        '#response' => '
        [
            "Missing required argument product"
        ]',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_resource_index_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_resource_index_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "",
    "data": {
      "order_number": "163693",
      "revision_id": "694409",
      "revision_uid": "43",
      "mail": "ananto.sql@gmail.com",
      "status": "cart",
      "log": "Created as a shopping cart order.",
      "revision_timestamp": 1457683638,
      "revision_hostname": "::1",
      "data": {
        "last_cart_refresh": 1457683638,
        "payment_method": "bank_transfer|commerce_payment_mandiri_bank_transfer"
      },
      "order_id": "163693",
      "type": "commerce_order",
      "uid": "43",
      "created": "1452485185",
      "changed": 1457683638,
      "hostname": "182.253.73.224",
      "commerce_line_items": [
        {
          "line_item_id": "662332",
          "order_id": "163693",
          "type": "mobile_prepaid",
          "line_item_label": "BLT200",
          "quantity": "1.00",
          "created": "1452485185",
          "changed": "1452485185",
          "data": null,
          "commerce_unit_price": {
            "amount": "200000",
            "currency_code": "IDR",
            "data": {
              "components": [
                {
                  "name": "base_price",
                  "price": {
                    "amount": "200000",
                    "currency_code": "IDR",
                    "data": {
                      "components": []
                    }
                  },
                  "included": true
                }
              ]
            }
          },
          "commerce_total": {
            "amount": "200000",
            "currency_code": "IDR",
            "data": {
              "components": [
                {
                  "name": "base_price",
                  "price": {
                    "amount": 200000,
                    "currency_code": "IDR",
                    "data": {
                      "components": []
                    }
                  },
                  "included": true
                }
              ]
            }
          },
          "commerce_product": {
            "revision_id": "434",
            "sku": "BLT200",
            "title": "Rp 200.000",
            "revision_uid": "0",
            "status": "1",
            "log": "",
            "revision_timestamp": "1445061047",
            "data": false,
            "product_id": "182",
            "type": "pulsa",
            "language": "und",
            "uid": "102",
            "created": "1440644604",
            "changed": "1445061047",
            "commerce_price": {
              "und": [
                {
                  "amount": "200000",
                  "currency_code": "IDR",
                  "data": {
                    "components": []
                  }
                }
              ]
            },
            "field_api_provider": {
              "und": [
                {
                  "value": "kraken"
                }
              ]
            },
            "field_credit_amount": {
              "und": [
                {
                  "value": "200000"
                }
              ]
            },
            "field_package_code": {
              "und": [
                {
                  "value": "28"
                }
              ]
            },
            "field_data_packet": {
              "und": [
                {
                  "value": "0"
                }
              ]
            },
            "field_deskripsi": [],
            "rdf_mapping": []
          },
          "commerce_display_path": null,
          "field_phone_number": "9991289663",
          "field_topup_status": "7",
          "field_topup_data": [
            ""
          ],
          "field_line_item_status": "pending",
          "rdf_mapping": null,
          "id": null
        },
        {
          "type": "fee",
          "order_id": "163693",
          "quantity": 1,
          "data": null,
          "line_item_id": "668606",
          "line_item_label": "PAYMENT CODE",
          "created": 1457683638,
          "changed": 1457683638,
          "commerce_unit_price": {
            "amount": "693",
            "currency_code": "IDR",
            "data": {
              "components": [
                {
                  "name": "payment_code",
                  "price": {
                    "amount": "693",
                    "currency_code": "IDR",
                    "data": []
                  },
                  "included": true
                }
              ]
            }
          },
          "commerce_total": {
            "amount": 693,
            "currency_code": "IDR",
            "data": {
              "components": [
                {
                  "name": "payment_code",
                  "price": {
                    "amount": 693,
                    "currency_code": "IDR",
                    "data": []
                  },
                  "included": true
                }
              ]
            }
          },
          "id": 1
        }
      ],
      "commerce_order_total": {
        "amount": 200693,
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": 200000,
                "currency_code": "IDR",
                "data": []
              },
              "included": true
            },
            {
              "name": "payment_code",
              "price": {
                "amount": 693,
                "currency_code": "IDR",
                "data": []
              },
              "included": true
            }
          ]
        }
      },
      "commerce_customer_billing": [],
      "field_commerce_billy_cancel_date": [],
      "field_commerce_billy_i_date": [],
      "commerce_coupons": [],
      "commerce_discounts": [],
      "field_order_source": {
        "und": [
          {
            "value": "Web",
            "format": null,
            "safe_value": "Web"
          }
        ]
      },
      "field_imei": [],
      "field_utm_source": {
        "und": [
          {
            "value": "website",
            "format": null,
            "safe_value": "website"
          }
        ]
      },
      "field_utm_medium": {
        "und": [
          {
            "value": "campaign_page",
            "format": null,
            "safe_value": "campaign_page"
          }
        ]
      },
      "field_utm_campaign": {
        "und": [
          {
            "value": "crazy_deal_indosat",
            "format": null,
            "safe_value": "crazy_deal_indosat"
          }
        ]
      },
      "field_app": [],
      "rdf_mapping": []
    }
  }
  ';
  $element = array(
    '#name' => t('Cart Index'),
    '#description' => t("Retrieve product list inside customer's shopping cart as order information."),
    '#auth' => TRUE,
    '#path' => 'services_v2/cart',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/cart.json<br />'
    . 'POST data application/json: { "source" : "android" }',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
      'missing_cart' => array(
        '#question' => '406 Not Acceptable: Cart missing',
        '#description' => t('Unable to get shopping cart. Check user session.'),
        '#response' => '
        [
            "Cart missing"
        ]',
      ),
      'invalid_order' => array(
        '#question' => '406 Not Acceptable: Invalid Order',
        '#description' => t('Unable to get order object. Check user session.'),
        '#response' => '
        [
            "Invalid Order"
        ]',
      ),
      'invalid_line_item' => array(
        '#question' => '406 Not Acceptable: Invalid Line Item',
        '#description' => t('Unable to get order object. Check user session.'),
        '#response' => '
        [
            "Invalid Line Item"
        ]',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_resource_coupon_redeem_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_resource_coupon_redeem_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "",
    "data": {
      "coupon": {
          "coupon_id": "6",
          "uid": "102",
          "type": "discount_coupon",
          "code": "GRP-aHzfYJ",
          "bulk": "1",
          "created": "1427435812",
          "changed": "1434565488",
          "status": "1",
          "data": "s:16:\u0022s:9:\u0022s:2:\u0022N;\u0022;\u0022;\u0022;",
          "commerce_discount_reference": {
              "und": [
                  {
                      "target_id": "1"
                  }
              ]
          },
          "commerce_coupon_conditions": {
              "und": [
                  {
                      "condition_name": "commerce_coupon_date_evaluate_date",
                      "condition_settings": {
                          "start": "2015-03-27",
                          "end": "2015-05-01",
                          "condition_logic_operator": null
                      },
                      "condition_negate": 0
                  },
                  {
                      "condition_name": "commerce_coupon_usage_evaluate_usage",
                      "condition_settings": {
                          "max_usage": "1"
                      },
                      "condition_negate": 0,
                      "condition_logic_operator": "1"
                  }
              ]
          },
          "commerce_coupon_recipient": [],
          "rdf_mapping": []
      },
      "offer": {
          "type": "fixed_amount",
          "discount_offer_id": "29",
          "commerce_fixed_amount": {
              "und": [
                  {
                      "amount": "50000",
                      "currency_code": "IDR",
                      "data": {
                          "components": []
                      }
                  }
              ]
          },
          "rdf_mapping": []
      }
    }
  }
  ';
  $element = array(
    '#name' => 'Redeem coupon code',
    '#description' => 'Redeem discount code on checkout page',
    '#auth' => TRUE,
    '#path' => 'services_v2/coupon_redeem',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/coupon_redeem.json<br />
    POST data application/json: { "source" : "android", "code" : "GRP-aHzfYJ" }',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_resource_coupon_remove_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_resource_coupon_remove_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "Kode discount telah dihapus",
    "data": []
  }
  ';
  $element = array(
    '#name' => 'Remove coupon code',
    '#description' => 'Remove discount code on checkout page',
    '#auth' => TRUE,
    '#path' => 'services_v2/coupon_remove',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/coupon_remove.json<br />
    POST data application/json: { "source" : "android", "coupon_id" : "6" }',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_get_saved_card_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_get_saved_card_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "",
    "data": {
          "expired": "1745395901",
          "first": "481111",
          "last": "1114",
          "order_id": "1",
          "phone": "08888888888",
          "token": "48111111f3ea7e-3c31-4e85-a56a-0d736cbad214",
          "token_id": "1",
          "uid": "1"
      }
  }
  ';
  $element = array(
    '#name' => 'Get token from veritrans to get saved card',
    '#description' => 'Get token from veritrans to get saved card list from veritrans',
    '#auth' => TRUE,
    '#path' => 'services_v2/saved_card',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/saved_card.json<br />
    POST data application/json: { "source" : "android" }',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
    ),
  );
  return $element;
}