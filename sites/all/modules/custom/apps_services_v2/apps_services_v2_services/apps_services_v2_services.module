<?php

/**
 * Implements hook_services_resources().
 */
function apps_services_v2_services_services_resources() {
    return array(
        'services_v2' => array(
            'actions' => array(
                'sepulsa' => array(
                    'help' => 'List all sepulsa operator data',
                    'callback' => 'apps_services_v2_services_sepulsa_operator_list',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                    'documentation callback' => 'apps_services_v2_services_sepulsa_operator_list_doc',
                    'access callback' => 'services_access_menu',
                    'args' => array(
                      array(
                        'name' => 'source',
                        'type' => 'string',
                        'description' => 'the source of the request',
                        'source' => array(
                          'data' => 'source',
                          'param' => 'source',
                        ),
                        'optional' => FALSE,
                        'http_method' => 'POST',
                      ),
                    ),
                ),
                'product' => array(
                    'help' => 'List sepulsa product based on type',
                    'callback' => 'apps_services_v2_services_sepulsa_product_index',
                    'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                    'documentation callback' => 'apps_services_v2_services_sepulsa_product_index_doc',
                    'access callback' => 'services_access_menu',
                    'args' => array(
                      array(
                        'name' => 'type',
                        'type' => 'string',
                        'description' => 'the source of the request',
                        'source' => array(
                          'data' => 'type',
                          'param' => 'type',
                        ),
                        'default value' => NULL,
                        'optional' => TRUE,
                        'http_method' => 'POST',
                      ),
                      array(
                        'name' => 'source',
                        'type' => 'string',
                        'description' => 'the source of the request',
                        'source' => array(
                          'data' => 'source',
                          'param' => 'source',
                        ),
                        'optional' => FALSE,
                        'http_method' => 'POST',
                      ),
                    ),
                ),
                'cart' => array(
                  'help' => "Retrieve product list inside customer's shopping cart.",
                  'callback' => 'apps_services_v2_services_resource_index',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'apps_services_v2_services_resource_index_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'cart_add' => array(
                  'help' => "Add the specified product to a customer's shopping cart.",
                  'callback' => 'apps_services_v2_services_resource_add',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'apps_services_v2_services_resource_add_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'product',
                      'type' => 'array',
                      'description' => 'The product data to be added',
                      'source' => array(
                        'data' => 'product',
                        'param' => 'product'
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'cart_add_multiple' => array(
                  'help' => "Add multiple specified product to a customer's shopping cart.",
                  'callback' => 'apps_services_v2_services_resource_add_multiple',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'apps_services_v2_services_resource_add_multiple_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'products',
                      'type' => 'array',
                      'description' => 'The product data to be added',
                      'source' => array(
                        'data' => 'products',
                        'param' => 'products'
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'coupon_redeem' => array(
                  'help' => "Redeem coupon code.",
                  'callback' => 'apps_services_v2_services_resource_coupon_redeem',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'commerce_coupon_services_resource_redeem_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'code',
                      'type' => 'string',
                      'description' => 'Coupon code',
                      'source' => array(
                        'data' => 'code',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
                'coupon_remove' => array(
                  'help' => "Remove coupon code from an order.",
                  'callback' => 'apps_services_v2_services_resource_coupon_remove',
                  'access callback' => 'services_access_menu',
                  'documentation callback' => 'commerce_coupon_services_resource_remove_doc',
                  'file' => array(
                        'type' => 'inc',
                        'module' => 'apps_services_v2_services',
                        'name' => 'apps_services_v2_services',
                    ),
                  'args' => array(
                    array(
                      'name' => 'coupon_id',
                      'type' => 'string',
                      'description' => 'Coupon id',
                      'source' => array(
                        'data' => 'coupon_id',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                    array(
                      'name' => 'source',
                      'type' => 'string',
                      'description' => 'the source of the request',
                      'source' => array(
                        'data' => 'source',
                        'param' => 'source',
                      ),
                      'optional' => FALSE,
                      'http_method' => 'POST',
                    ),
                  ),
                ),
            ),
        ),
    );
}

/**
 * Function apps_services_v2_services_sepulsa_operator_list_doc().
 *
 * Documentation callback for sepulsa operator list.
 */
function apps_services_v2_services_sepulsa_operator_list_doc() {
  global $base_url;
  $response = '
    {
      "source": "android"
    }
  ';
  $element = array(
    '#name' => 'Sepulsa Get Operator List',
    '#description' => 'Get Operator and Prefix Data from Sepulsa.',
    '#auth' => FALSE,
    '#path' => 'services_v2/sepulsa',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/sepulsa.json',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
	  'missing_argument' => array(
        '#question' => '401 Unauthorized : Missing required argument',
        '#description' => 'When drupal detect that the user missed some of the input required.',
        '#response' => '
        [
          "Missing required argument"
        ]',
      ),
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => 'Drupal server can not handle the request. Drupal will output nothing.',
        '#response' => '',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_sepulsa_product_index_doc().
 *
 * Documentation callback for sepulsa product list.
 */
function apps_services_v2_services_sepulsa_product_index_doc() {
  global $base_url;
  $response = '
    {
        "type": "coupon",
        "source": "android"
    }
  ';
  $element = array(
    '#name' => 'Sepulsa Get Product List',
    '#description' => 'Get Sepulsa Product Data based on type.',
    '#auth' => FALSE,
    '#path' => 'services_v2/product',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/product.json',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
	  'missing_argument' => array(
        '#question' => '401 Unauthorized : Missing required argument',
        '#description' => 'When drupal detect that the user missed some of the input required.',
        '#response' => '
        [
          "Missing required argument"
        ]',
      ),
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => 'Drupal server can not handle the request. Drupal will output nothing.',
        '#response' => '',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_resource_add_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_resource_add_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "",
    "data": {
      "type": "mobile_prepaid",
      "order_id": "165212",
      "quantity": 1,
      "data": [],
      "line_item_id": "668474",
      "line_item_label": "SMPT25",
      "created": 1455853677,
      "changed": 1455853677,
      "commerce_product": {
        "revision_id": "417",
        "sku": "SMPT25",
        "title": "Rp 25.000",
        "revision_uid": "13957",
        "status": "1",
        "log": "",
        "revision_timestamp": "1445132516",
        "data": false,
        "product_id": "4",
        "type": "pulsa",
        "language": "und",
        "uid": "1",
        "created": "1419919510",
        "changed": "1445132516",
        "commerce_price": {
          "und": [
            {
              "amount": "25000",
              "currency_code": "IDR",
              "data": {
                "components": []
              }
            }
          ]
        },
        "field_api_provider": {
          "und": [
            {
              "value": "kraken"
            }
          ]
        },
        "field_credit_amount": {
          "und": [
            {
              "value": "25000"
            }
          ]
        },
        "field_package_code": {
          "und": [
            {
              "value": "26"
            }
          ]
        },
        "field_data_packet": {
          "und": [
            {
              "value": "0"
            }
          ]
        },
        "field_deskripsi": [],
        "rdf_mapping": []
      },
      "commerce_display_path": "",
      "commerce_unit_price": {
        "amount": "25000",
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": "25000",
                "currency_code": "IDR",
                "data": {
                  "components": []
                }
              },
              "included": true
            }
          ]
        }
      },
      "field_phone_number": "0812111111",
      "commerce_total": {
        "amount": 25000,
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": 25000,
                "currency_code": "IDR",
                "data": {
                  "components": []
                }
              },
              "included": true
            }
          ]
        }
      },
      "field_topup_status": "7",
      "field_topup_data": [
        ""
      ],
      "field_line_item_status": "pending"
    }
  }
  ';
  $element = array(
    '#name' => t('Cart Add Content'),
    '#description' => t("Add new shopping cart content."),
    '#auth' => TRUE,
    '#path' => 'services_v2/cart_add',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/cart_add.json<br />
    POST topup data application/json: { "source" : "android", "product": { "product_id": 5, "type": "mobile_prepaid", "quantity": 1, "fields": {"field_phone_number":"08122545393"} } } <br />
    POST coupon data application/json: { "source" : "android", "product": { "product_id": 11, "type": "coupon", "quantity": 1 } } <br />
    ',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
      'missing_cart' => array(
        '#question' => '406 Not Acceptable: Cart missing',
        '#description' => t('Unable to get shopping cart. Check user session.'),
        '#response' => '
        [
            "Cart missing"
        ]',
      ),
      'product_required' => array(
        '#question' => '406 Not Acceptable: Product is required',
        '#description' => t('Default error message when add new content into cart. Possible invalid product id input.'),
        '#response' => '
        [
            "Product is required"
        ]',
      ),
      'product_not_found' => array(
        '#question' => '406 Not Acceptable: Product not found',
        '#description' => t('Invalid product id input. System can not recognize product based on product id input.'),
        '#response' => '
        [
            "Product not found"
        ]',
      ),
      'unable_to_add' => array(
        '#question' => '406 Not Acceptable: Unable to add product',
        '#description' => t('Unable to add content into shopping cart. Possible because unable to pass certain rules, such as product price rules.'),
        '#response' => '
        [
            "Unable to add product"
        ]',
      ),
      'invalid_product_fields' => array(
        '#question' => '406 Not Acceptable: Invalid product fields',
        '#description' => t('Product field input is invalid.'),
        '#response' => '
        [
            "Invalid product fields"
        ]',
      ),
      'invalid_line_item' => array(
        '#question' => '406 Not Acceptable: Invalid Line Item',
        '#description' => t('Unable to get order object. Check user session.'),
        '#response' => '
        [
            "Invalid Line Item"
        ]',
      ),
      'missing_requirement' => array(
        '#question' => '401 Unauthorized: Missing required argument product',
        '#description' => t('Required product argument: product id.'),
        '#response' => '
        [
            "Missing required argument product"
        ]',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_resource_add_multiple_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_resource_add_multiple_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "",
    "data": {
      "type": "mobile_prepaid",
      "order_id": "165212",
      "quantity": 1,
      "data": [],
      "line_item_id": "668474",
      "line_item_label": "SMPT25",
      "created": 1455853677,
      "changed": 1455853677,
      "commerce_product": {
        "revision_id": "417",
        "sku": "SMPT25",
        "title": "Rp 25.000",
        "revision_uid": "13957",
        "status": "1",
        "log": "",
        "revision_timestamp": "1445132516",
        "data": false,
        "product_id": "4",
        "type": "pulsa",
        "language": "und",
        "uid": "1",
        "created": "1419919510",
        "changed": "1445132516",
        "commerce_price": {
          "und": [
            {
              "amount": "25000",
              "currency_code": "IDR",
              "data": {
                "components": []
              }
            }
          ]
        },
        "field_api_provider": {
          "und": [
            {
              "value": "kraken"
            }
          ]
        },
        "field_credit_amount": {
          "und": [
            {
              "value": "25000"
            }
          ]
        },
        "field_package_code": {
          "und": [
            {
              "value": "26"
            }
          ]
        },
        "field_data_packet": {
          "und": [
            {
              "value": "0"
            }
          ]
        },
        "field_deskripsi": [],
        "rdf_mapping": []
      },
      "commerce_display_path": "",
      "commerce_unit_price": {
        "amount": "25000",
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": "25000",
                "currency_code": "IDR",
                "data": {
                  "components": []
                }
              },
              "included": true
            }
          ]
        }
      },
      "field_phone_number": "0812111111",
      "commerce_total": {
        "amount": 25000,
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": 25000,
                "currency_code": "IDR",
                "data": {
                  "components": []
                }
              },
              "included": true
            }
          ]
        }
      },
      "field_topup_status": "7",
      "field_topup_data": [
        ""
      ],
      "field_line_item_status": "pending"
    }
  }
  ';
  $element = array(
    '#name' => t('Cart Add Multiple Content'),
    '#description' => t("Add multiple new shopping cart content."),
    '#auth' => TRUE,
    '#path' => 'services_v2/cart_add_multiple',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/cart_add_multiple.json<br />
    POST topup data application/json: { "source" : "android", "product": [ { "product_id": 5, "type": "mobile_prepaid", "quantity": 1, "fields": {"field_phone_number":"08122545393"}},{ "product_id": 6, "type": "mobile_prepaid", "quantity": 1, "fields": {"field_phone_number":"08122545393"} } ] } <br />
    POST coupon data application/json: { "source" : "android", "product": [ { "product_id": 11, "type": "coupon", "quantity": 1 }, { "product_id": 11, "type": "coupon", "quantity": 1 } ] } <br />
    ',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
      'missing_cart' => array(
        '#question' => '406 Not Acceptable: Cart missing',
        '#description' => t('Unable to get shopping cart. Check user session.'),
        '#response' => '
        [
            "Cart missing"
        ]',
      ),
      'product_required' => array(
        '#question' => '406 Not Acceptable: Product is required',
        '#description' => t('Default error message when add new content into cart. Possible invalid product id input.'),
        '#response' => '
        [
            "Product is required"
        ]',
      ),
      'product_not_found' => array(
        '#question' => '406 Not Acceptable: Product not found',
        '#description' => t('Invalid product id input. System can not recognize product based on product id input.'),
        '#response' => '
        [
            "Product not found"
        ]',
      ),
      'unable_to_add' => array(
        '#question' => '406 Not Acceptable: Unable to add product',
        '#description' => t('Unable to add content into shopping cart. Possible because unable to pass certain rules, such as product price rules.'),
        '#response' => '
        [
            "Unable to add product"
        ]',
      ),
      'invalid_product_fields' => array(
        '#question' => '406 Not Acceptable: Invalid product fields',
        '#description' => t('Product field input is invalid.'),
        '#response' => '
        [
            "Invalid product fields"
        ]',
      ),
      'invalid_line_item' => array(
        '#question' => '406 Not Acceptable: Invalid Line Item',
        '#description' => t('Unable to get order object. Check user session.'),
        '#response' => '
        [
            "Invalid Line Item"
        ]',
      ),
      'missing_requirement' => array(
        '#question' => '401 Unauthorized: Missing required argument product',
        '#description' => t('Required product argument: product id.'),
        '#response' => '
        [
            "Missing required argument product"
        ]',
      ),
    ),
  );
  return $element;
}

/**
 * Function apps_services_v2_services_resource_index_doc().
 *
 * @return array
 *   Service documentation array.
 */
function apps_services_v2_services_resource_index_doc() {
  global $base_url;
  $response = '
  {
    "status": true,
    "message": "",
    "data": {
      "order_number": "165212",
      "revision_id": "702198",
      "revision_uid": "0",
      "mail": "",
      "status": "cart",
      "log": "Created as a shopping cart order.",
      "revision_timestamp": "1455853677",
      "revision_hostname": "::1",
      "data": {
        "last_cart_refresh": 1455864890,
        "payment_method": "commerce_veritrans|commerce_payment_commerce_veritrans"
      },
      "order_id": "165212",
      "type": "commerce_order",
      "uid": "0",
      "created": "1455853677",
      "changed": "1455853677",
      "hostname": "::1",
      "commerce_line_items": [
        {
          "line_item_id": "668474",
          "order_id": "165212",
          "type": "mobile_prepaid",
          "line_item_label": "SMPT25",
          "quantity": "1.00",
          "created": "1455853677",
          "changed": "1455853677",
          "data": [],
          "commerce_unit_price": {
            "amount": "25000",
            "currency_code": "IDR",
            "data": {
              "components": [
                {
                  "name": "base_price",
                  "price": {
                    "amount": "25000",
                    "currency_code": "IDR",
                    "data": {
                      "components": []
                    }
                  },
                  "included": true
                }
              ]
            }
          },
          "commerce_total": {
            "amount": "25000",
            "currency_code": "IDR",
            "data": {
              "components": [
                {
                  "name": "base_price",
                  "price": {
                    "amount": 25000,
                    "currency_code": "IDR",
                    "data": {
                      "components": []
                    }
                  },
                  "included": true
                }
              ]
            }
          },
          "commerce_product": {
            "revision_id": "417",
            "sku": "SMPT25",
            "title": "Rp 25.000",
            "revision_uid": "13957",
            "status": "1",
            "log": "",
            "revision_timestamp": "1445132516",
            "data": false,
            "product_id": "4",
            "type": "pulsa",
            "language": "und",
            "uid": "1",
            "created": "1419919510",
            "changed": "1445132516",
            "commerce_price": {
              "und": [
                {
                  "amount": "25000",
                  "currency_code": "IDR",
                  "data": {
                    "components": []
                  }
                }
              ]
            },
            "field_api_provider": {
              "und": [
                {
                  "value": "kraken"
                }
              ]
            },
            "field_credit_amount": {
              "und": [
                {
                  "value": "25000"
                }
              ]
            },
            "field_package_code": {
              "und": [
                {
                  "value": "26"
                }
              ]
            },
            "field_data_packet": {
              "und": [
                {
                  "value": "0"
                }
              ]
            },
            "field_deskripsi": [],
            "rdf_mapping": []
          },
          "commerce_display_path": "",
          "field_phone_number": "0812111111",
          "field_topup_status": "7",
          "field_topup_data": [
            ""
          ],
          "field_line_item_status": "pending",
          "rdf_mapping": []
        }
      ],
      "commerce_order_total": {
        "amount": 25000,
        "currency_code": "IDR",
        "data": {
          "components": [
            {
              "name": "base_price",
              "price": {
                "amount": 25000,
                "currency_code": "IDR",
                "data": []
              },
              "included": true
            }
          ]
        }
      },
      "commerce_customer_billing": [],
      "field_commerce_billy_cancel_date": [],
      "field_commerce_billy_i_date": [],
      "commerce_coupons": [],
      "commerce_discounts": [],
      "field_order_source": {
        "und": [
          {
            "value": "MWEB",
            "format": null,
            "safe_value": "MWEB"
          }
        ]
      },
      "field_imei": [],
      "field_utm_source": [],
      "field_utm_medium": [],
      "field_utm_campaign": [],
      "field_app": [],
      "rdf_mapping": []
    }
  }
  ';
  $element = array(
    '#name' => t('Cart Index'),
    '#description' => t("Retrieve product list inside customer's shopping cart as order information."),
    '#auth' => TRUE,
    '#path' => 'services_v2/cart',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/air/services_v2/cart.json<br />'
    . 'POST data application/json: { "source" : "android" }',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
      'missing_cart' => array(
        '#question' => '406 Not Acceptable: Cart missing',
        '#description' => t('Unable to get shopping cart. Check user session.'),
        '#response' => '
        [
            "Cart missing"
        ]',
      ),
      'invalid_order' => array(
        '#question' => '406 Not Acceptable: Invalid Order',
        '#description' => t('Unable to get order object. Check user session.'),
        '#response' => '
        [
            "Invalid Order"
        ]',
      ),
      'invalid_line_item' => array(
        '#question' => '406 Not Acceptable: Invalid Line Item',
        '#description' => t('Unable to get order object. Check user session.'),
        '#response' => '
        [
            "Invalid Line Item"
        ]',
      ),
    ),
  );
  return $element;
}