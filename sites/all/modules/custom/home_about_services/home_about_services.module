<?php
/**
 * @file
 * home_about_services.module
 */

/**
 * Hook Implementations.
 */

/**
 * Implements hook_views_api().
 */
function home_about_services_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'home_about_services'),
  );
}

/**
 * Implements hook_views_default_views().
 */
function home_about_services_views_default_views() {
  return merchant_views();
}

function merchant_views(){
    /*
   * View 'merchant'
   */
    $view =   views_new_view();
    $view->name = 'merchant';
    $view->description = '';
    $view->tag = 'default';
    $view->base_table = 'node';
    $view->human_name = 'Merchant';
    $view->core = 7;
    $view->api_version = '3.0';
    $view->disabled = FALSE; /* Edit this to true to make a default view disabled initially */

    /* Display: Master */
    $handler = $view->new_display('default', 'Master', 'default');
    $handler->display->display_options['title'] = 'Merchant';
    $handler->display->display_options['use_more_always'] = FALSE;
    $handler->display->display_options['access']['type'] = 'perm';
    $handler->display->display_options['cache']['type'] = 'none';
    $handler->display->display_options['query']['type'] = 'views_query';
    $handler->display->display_options['exposed_form']['type'] = 'basic';
    $handler->display->display_options['pager']['type'] = 'some';
    $handler->display->display_options['pager']['options']['items_per_page'] = '10';
    $handler->display->display_options['style_plugin'] = 'table';
    /* Field: Content: Title */
    $handler->display->display_options['fields']['title']['id'] = 'title';
    $handler->display->display_options['fields']['title']['table'] = 'node';
    $handler->display->display_options['fields']['title']['field'] = 'title';
    $handler->display->display_options['fields']['title']['alter']['word_boundary'] = FALSE;
    $handler->display->display_options['fields']['title']['alter']['ellipsis'] = FALSE;
    /* Field: Content: Merchant Image */
    $handler->display->display_options['fields']['field_merchant_image']['id'] = 'field_merchant_image';
    $handler->display->display_options['fields']['field_merchant_image']['table'] = 'field_data_field_merchant_image';
    $handler->display->display_options['fields']['field_merchant_image']['field'] = 'field_merchant_image';
    $handler->display->display_options['fields']['field_merchant_image']['click_sort_column'] = 'fid';
    $handler->display->display_options['fields']['field_merchant_image']['settings'] = array(
      'image_style' => 'thumbnail',
      'image_link' => '',
    );
    /* Field: Draggableviews: Content */
    $handler->display->display_options['fields']['draggableviews']['id'] = 'draggableviews';
    $handler->display->display_options['fields']['draggableviews']['table'] = 'node';
    $handler->display->display_options['fields']['draggableviews']['field'] = 'draggableviews';
    $handler->display->display_options['fields']['draggableviews']['element_default_classes'] = FALSE;
    $handler->display->display_options['fields']['draggableviews']['hide_alter_empty'] = FALSE;
    $handler->display->display_options['fields']['draggableviews']['draggableviews']['ajax'] = 0;
    /* Sort criterion: Draggableviews: Weight */
    $handler->display->display_options['sorts']['weight']['id'] = 'weight';
    $handler->display->display_options['sorts']['weight']['table'] = 'draggableviews_structure';
    $handler->display->display_options['sorts']['weight']['field'] = 'weight';
    $handler->display->display_options['sorts']['weight']['draggableviews_setting_view'] = 'merchant:page';
    $handler->display->display_options['sorts']['weight']['draggableviews_setting_new_items_bottom_list'] = 1;
    /* Filter criterion: Content: Published */
    $handler->display->display_options['filters']['status']['id'] = 'status';
    $handler->display->display_options['filters']['status']['table'] = 'node';
    $handler->display->display_options['filters']['status']['field'] = 'status';
    $handler->display->display_options['filters']['status']['value'] = 1;
    $handler->display->display_options['filters']['status']['group'] = 1;
    $handler->display->display_options['filters']['status']['expose']['operator'] = FALSE;
    /* Filter criterion: Content: Type */
    $handler->display->display_options['filters']['type']['id'] = 'type';
    $handler->display->display_options['filters']['type']['table'] = 'node';
    $handler->display->display_options['filters']['type']['field'] = 'type';
    $handler->display->display_options['filters']['type']['value'] = array(
      'merchant' => 'merchant',
    );

    /* Display: Page */
    $handler = $view->new_display('page', 'Page', 'page');
    $handler->display->display_options['path'] = 'admin/content/merchant';
    $handler->display->display_options['menu']['type'] = 'tab';
    $handler->display->display_options['menu']['title'] = 'Merchant';
    $handler->display->display_options['menu']['weight'] = '0';
    $handler->display->display_options['menu']['context'] = 0;
    $handler->display->display_options['menu']['context_only_inline'] = 0;

    $views[$view->name] = $view;
    return $views;
}

/**
 * Implements hook_block_info().
 */
function home_about_services_block_info() {
  $blocks = array();
  $blocks['home_about'] = array(
    'info' => t('Home About'),
  );
  
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function home_about_services_block_configure($delta='') {
  $form = array();
  
  switch($delta) {
    case 'home_about' :
      $form['home_about_title'] = array(
        '#type' => 'text_format',
        '#title' => t('Home About Title'),
        '#default_value' => variable_get('home_about_title', ''),
      );
        
      $form['home_about_text'] = array(
        '#type' => 'text_format',
        '#title' => t('Home About Text'),
        '#default_value' => variable_get('home_about_text', ''),
      );

      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function home_about_services_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'home_about' :
      // Saving the WYSIWYG text      
      variable_set('home_about_title', $edit['home_about_title']['value']);
      variable_set('home_about_text', $edit['home_about_text']['value']);
      break;
  }
}

/**
 * Implements hook_block_view().
 */
function home_about_services_block_view($delta='') {
  $block = array();
  
  switch($delta) {
    case 'home_about' :
      $block['content'] = home_about_view();
      break;
  }
  
  return $block;
}

/**
 * Custom function to assemble renderable array for block content.
 * Returns a renderable array with the block content.
 * @return
 *   returns a renderable array of block content.
 */
function home_about_view() {
    $block = array();
    
    $merchants = views_get_view_result('merchant', 'page');
    $content['home_about_title'] = variable_get('home_about_title', '');
    $content['home_about_text'] = variable_get('home_about_text', '');
    $content['merchants'] = $merchants;
    return theme('home_about_detail', array('content' => $content));
}

/**
 * Implements hook_theme().
 */
function home_about_services_theme($existing, $type, $theme, $path) {
    return array(
      'home_about_detail' => array(
        'variables' => array('content' => NULL),
        'template' => 'home_about_detail', // place you file in 'theme' folder of you module folder
        'path' => drupal_get_path('module', 'home_about_services')
      )
    );
}

/**
 * Implements hook_services_resources().
 */
function home_about_services_services_resources() {
  $definition = array(
    'home_about' => array(
      'actions' => array(
        'home_about_detail' => array(
          'help' => 'Get Home About Detail',
          'callback' => '_home_about_services_detail',
          'documentation callback' => 'home_about_services_detail_doc',
          'access callback' => '_home_about_access',
          'args' => array(
            // no parameter
          ),
        ),
      ),
    ),
  );
  return $definition;
}

/**
 * Callback Functions.
 */

/** * Access callback */
function _home_about_access() {
  return TRUE;
}

/**
 * Resources callback for home about detail.
 */
function _home_about_services_detail(){
  // Wrap around using try and catch.
  try {
    $merchants = views_get_view_result('merchant', 'page');
    foreach($merchants as $merchant) {
        $field_merchant_image = $merchant->field_field_merchant_image[0]['raw']['uri'];
        $image_url = file_create_url($field_merchant_image);
        $merchant_images[] = $image_url;
    }
    $home_about = ['home_about_title' => variable_get('home_about_title', ''), 'home_about_text' => variable_get('home_about_text', ''), 'field_merchant_images' => $merchant_images];
    
    return $home_about;
  }
  catch (Exception $exception) {
    // Log this condition.
    watchdog('home_about_services', 'Error at @location. Trace:<pre>@trace</pre>', array(
      '@location' => __FUNCTION__,
      '@trace' => _drupal_render_exception_safe($exception),
    ), WATCHDOG_ERROR, t('Home About Services'));
  }
  // Other condition return error;
  return services_error(t('Invalid Service'), 406);
}

/**
 * Documentation callback for order home_about detail.
 */
function home_about_services_detail_doc() {
  global $base_url;
  $response = '
  {
    "home_about_title": "Isi Pulsa Dapat Voucher Diskon"
    "home_about_text": "<p>Setiap kali kamu melakukan isi ulang pulsa di Sepulsa, kamu bisa memilih voucher diskon di berbagai macam e-commerce website di Indonesia senilai pulsa kamu (atau lebih!). Bukan hanya satu, kamu bisa memilih sampai TIGA voucher diskon.</p><p>Tidak hanya itu, kami juga akan berupaya untuk terus memberikan banyak kejutan lainnya untuk konsumen Sepulsa. Isi pulsa jadi sangat menyenangkan di Sepulsa.com</p>",
    "field_merchant_images": [
        "http://dev.sepulsa.id/sites/dev.sepulsa.com/files/logo-bilna.png",
        "http://dev.sepulsa.id/sites/dev.sepulsa.com/files/bhinneka-no-1-online-store_0.png",
        "http://dev.sepulsa.id/sites/dev.sepulsa.com/files/lensza-logo-300x100.png",
        "http://dev.sepulsa.id/sites/dev.sepulsa.com/files/qraved_logo-02.png",
        "http://dev.sepulsa.id/sites/dev.sepulsa.com/files/logo-zalora.png"
    ]
}
  ';
  $element = array(
    '#name' => t('Home About Service'),
    '#description' => t('Get Home About Detail'),
    '#auth' => TRUE,
    '#path' => 'home_about/home_about_detail',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/api/home_about/home_about_detail.json<br />
    POST data application/json:
    ',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'csrf_validation' => array(
        '#question' => '401 Unauthorized: CSRF Validation Failed',
        '#description' => t('When drupal detect that the user already login from other site or header X-CSRF-Token is needed.'),
        '#response' => '
        [
          "CSRF validation failed"
        ]',
      ),
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
    ),
  );
  return $element;
}
