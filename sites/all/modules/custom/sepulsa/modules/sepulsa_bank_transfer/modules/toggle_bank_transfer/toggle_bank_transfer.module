<?php
/**
 * @file
 * toogle_bank_transfer.module
 *
 * @author andreas
 * @since January 18, 2016
 *
 * @desc
 *   Add permission which able to toggle bank transfer.
 */

/**
 * Hook Implementations.
 */

/**
 * Implements hook_permission().
 */
function toggle_bank_transfer_permission() {
  // Define list permission container.
  $permissions = array(
    'access toggle bank transfer' => array(
      'title' => t('Access toggle bank transfer menu'),
      'description' => t('Access page to enable / disable bank transfer payment method.'),
    ),
  );

  // Get bank transfer payment options.
  $options = variable_get('toggle_bank_transfer_options', sepulsa_bank_transfer_get_options());

  // Looping for each option key.
  foreach ($options as $key => $option) {
    $key = str_replace('_', ' ', $key);
    // Add permission.
    $permissions['toggle ' . $key] = array(
      'title' => t('Toogle ' . $key),
      'description' => t('Perform enable / disable ' . $key . ' payment method.'),
    );
  }

  // Return permission container.
  return $permissions;
}

/**
 * Implements hook_menu().
 */
function toggle_bank_transfer_menu() {
  // Toggle bank transfer page.
  $items['admin/commerce/config/bank_transfer/toggle-bank-transfer'] = array(
    'title' => 'Toggle Bank Transfer',
    'description' => 'Page to enable / disable bank transfer payment method.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('toggle_bank_transfer_admin_form'),
    'access arguments' => array('access toggle bank transfer'),
    'file' => 'toggle_bank_transfer.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_form_commerce_checkout_form_checkout_alter().
 */
function toggle_bank_transfer_form_commerce_checkout_form_checkout_alter(&$form, &$form_state, $form_id) {
  // Get bank transfer payment options toggle.
  $toggle = variable_get('toggle_bank_transfer_options', sepulsa_bank_transfer_get_options());
  // Get commerce_payment => payment_method => #options.
  if (isset($form['commerce_payment']['payment_method']['#options'])) {
    // Get the payment options.
    $options = $form['commerce_payment']['payment_method']['#options'];
    // Looping for each option.
    foreach ($options as $key => $option) {
      // Check bank_transfer prefix.
      if (isset($toggle[$key]) && $toggle[$key] === TRUE) {
        // Check configuration whether need to disable.
        unset($form['commerce_payment']['payment_method']['#options'][$key]);
        unset($form['commerce_payment']['payment_methods']['#value'][$key]);
      }
    }
  }
  // Add validate function: validate checkout form.
  array_unshift($form['buttons']['continue']['#validate'], 'toggle_bank_transfer_checkout_form_validate');
}

/**
 * Callback Functions.
 */

/**
 * Function toggle_bank_transfer_checkout_form_validate().
 *
 * Validate payment method option at checkout form.
 *
 * @param array $form
 *   Form array.
 * @param array $form_state
 *   Form state array.
 */
function toggle_bank_transfer_checkout_form_validate($form, &$form_state) {
  // Check form state values for payment input.
  if (isset($form_state['values']['commerce_payment']['payment_method'])
    && !empty($form_state['values']['commerce_payment']['payment_method'])
  ) {
    // Get bank transfer payment options toggle.
    $toggle = variable_get('toggle_bank_transfer_options', sepulsa_bank_transfer_get_options());
    if (isset($toggle[$form_state['values']['commerce_payment']['payment_method']])
      && $toggle[$form_state['values']['commerce_payment']['payment_method']] === TRUE
    ) {
      form_set_error('commerce_payment][payment_method', t('Your selected payment method is not available at the moment.'));
    }
  }
}
