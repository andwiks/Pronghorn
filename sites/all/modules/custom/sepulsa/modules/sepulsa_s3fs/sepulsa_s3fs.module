<?php

/**
 * @file
 * Custome module s3fs to copy local themes files to s3 bucket.
 */

 /**
  * Implements hook_form_alter().
  */
function sepulsa_s3fs_form_s3fs_actions_alter(&$form, &$form_state, $form_id) {
  $form['s3fs_copy_themes'] = array(
    '#type' => 'fieldset',
    '#description' => t("Since you have S3 File System configured to take over for the local themes files, you may wish to copy any files which were previously uploaded to your site into your S3 bucket."),
    '#title' => t('Copy Local Themes Files to S3'),
  );
  $form['s3fs_copy_themes']['sepulsa'] = array(
    '#type' => 'submit',
    '#prefix' => '<br>',
    '#name' => 'sepulsa',
    '#value' => t('Copy local themes files to S3'),
    '#submit' => array('_s3fs_copy_local_themes_submit'),
  );
}

/**
 * Submit callback for the "Copy local themes files to S3" buttons.
 */
function _s3fs_copy_local_themes_submit() {
  _s3fs_copy_file_themes_to_s3();
  drupal_set_message(t('Copied all local themes files to S3.', array('%scheme' => 'public')), 'status');
}

/**
 * Implements copy function.
 */
function _s3fs_copy_file_themes_to_s3() {
  $source_folder = realpath('sites/all/themes');
  $target_folder = 's3fs-public/';

  $file_paths = _s3fs_themes_recursive_dir_scan($source_folder);
  foreach ($file_paths as $path) {
    $relative_path = str_replace($source_folder . '/', '', $path);

    // Print "Copying public://$relative_path into S3...\n";
    // // Finally get to make use of S3fsStreamWrapper's "S3 is actually a local
    // // file system. No really!" functionality.
    if (preg_match('#\.(css|js|png|jpeg|jpg|svg|gif|ico)$#', $relative_path)) {
      copy($path, "public://sites/all/themes/$relative_path");
    }
  }
}

/**
 * Implements scan directories.
 */
function _s3fs_themes_recursive_dir_scan($dir) {
  $output = array();
  $files = scandir($dir);
  foreach ($files as $file) {
    $path = "$dir/$file";

    if ($file != '.' && $file != '..') {
      if (is_dir($path)) {
        $output = array_merge($output, _s3fs_themes_recursive_dir_scan($path));
      }
      else {
        $output[] = $path;
      }
    }
  }
  return $output;
}
