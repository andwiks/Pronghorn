<?php
/**
 * @file
 * sepulsa_services.module
 *
 * @author andre4s_y
 * @since Februari 21st, 2015
 */

/**
 * Hook Implementations.
 */

/**
 * Implements hook_services_resources().
 */
function sepulsa_services_services_resources() {
  $resources = array(
    'sepulsa' => array(
      'operations' => array(
        'index' => array(
          'help' => 'List all sepulsa operator data',
          'callback' => '_sepulsa_services_resource_index',
          'documentation callback' => '_sepulsa_services_index_doc',
          'args' => array(),
          'access arguments' => array('access content'),
        ),
      ),
	    'actions' => array(
        'get_number' => array(
          'help' => 'List all user existing number',
          'callback' => '_sepulsa_services_existing_number',
          'documentation callback' => '_sepulsa_services_existing_number_doc',
          'args' => array(),
          'access arguments' => array('access content'),
        ),
      )
    ),
    'product' => array(
      'operations' => array(
        'index' => array(
          'callback' => '_sepulsa_services_resource_product_index',
          'access arguments' => array('access content'),
          'args' => array(
            'type' => array(
              'name' => 'type',
              'type' => 'string',
              'description' => 'Product type',
              'optional' => TRUE,
              'source' => array(
                'param' => 'type',
              ),
              'default value' => NULL,
            ),
          ),
        ),
      ),
    ),
  );

  return $resources;
}

/**
 * Implements hook_services_request_postprocess_alter().
 */
function sepulsa_services_services_request_postprocess_alter($controller, $args, &$result) {
  $messages = drupal_get_messages();

  if (!empty($messages)) {
    switch (gettype($result)) {
      case 'array':
        $result['sepulsa_messages'] = $messages;
        break;

      case 'object':
        $result->sepulsa_messages = $messages;
        break;

      default:
        $result = array(
          $result,
          'sepulsa_messages' => $messages,
        );
        break;
    }
  }
}

/**
 * Callback Functions.
 */

/**
 * Function _sepulsa_services_resource_index().
 *
 * Resources callback for sepulsa resource index.
 */
function _sepulsa_services_resource_index() {
  // Define service friendly return value.
  $return = array();
  // Get operator data.
  $operator = sepulsa_get_all_operator_data();
  // Looping for each operator data: contain term id and other operator data.
  foreach ($operator as $id => $data) {
    // Return only available cardtype and packet.
    if (isset($data['cardtype']) && !empty($data['cardtype'])
      && isset($data['packet']) && !empty($data['packet'])
    ) {
      // Include id into operator data.
      $return[] = array('id' => $id) + $data;
    }
  }
  // Return service friendly return value.
  return $return;
}

function _sepulsa_services_existing_number() {
  $existing_number = sepulsa_get_existing_number();

  return $existing_number;
}

function _sepulsa_services_resource_product_index($type = NULL) {
  $products = &drupal_static(__FUNCTION__, array());

  if (empty($products)) {
    $cache = cache_get('sepulsa_all_products', 'cache');

    if (empty($cache)) {
      $nodes = node_load_multiple(FALSE, array('type' => array_keys(commerce_product_reference_node_types())));
      $views = node_view_multiple($nodes, 'default');

      foreach ($views['nodes'] as $nid => $view) {
        if (isset($nodes[$nid])) {
          $field_product = $view['field_product'][0];

          $products[$nodes[$nid]->type][$nid] = array(
            'title' => $nodes[$nid]->title,
          );

          foreach (element_children($field_product) as $children) {
            switch ($field_product[$children]['#type']) {
              case 'select':
                $products[$nodes[$nid]->type][$nid][$children] = $field_product[$children]['#options'];
                break;

              case 'container':
                $products[$nodes[$nid]->type][$nid][$children] = element_children($field_product[$children]);
                break;

              default:
                $products[$nodes[$nid]->type][$nid][$children] = $field_product[$children]['#value'];
                break;
            }
          }

          $products[$nodes[$nid]->type][$nid]['line_item_type'] = $field_product['line_item_fields']['#bundle'];
        }
      }

      cache_set('sepulsa_all_products', $products, 'cache', CACHE_PERMANENT);
    }
    else {
      $products = $cache->data;
    }
  }

  return empty($type) ? $products : $products[$type];
}

/**
 * Function _sepulsa_services_index_doc().
 *
 * Documentation callback for index actions sepulsa.
 */
function _sepulsa_services_index_doc() {
  global $base_url;
  $response = '
  [                                // List of Taxonomy Mobile Operator.
    {
      "id": 19,                    // Taxonomy Term ID.
      "operator": "Telkomsel",     // Taxonomy Term Label.
      "prefix": [                  // Taxonomy field_operator_prefix.
        "0811",
        "0812",
        "0813",
        "0821",
        "0822",
        "0823",
        "0852",
        "0853"
      ],
      "cardtype": {                // List of Product Display.
        "3": "Telkomsel Simpati",  // Node ID: Node Pulsa Title.
        "10": "Telkomsel Test"
      },
      "packet": {                  // Product Variations.
        "3": [                     // Product Display Node ID.
          {                        // List of product variation.
            "id": "5",             // Product ID.
            "title": "Rp 50.000",  // Product Title.
            "price": "51000"       // Product Price.
          },
          {
            "id": "6",
            "title": "Rp 100.000",
            "price": "101000"
          }
        ],
        "10": [
          {
            "id": "12",
            "title": "Rp 5.000",
            "price": "6000"
          }
        ]
      }
    },
    {
      "id": 20,
      "operator": "XL",
      "prefix": [
        "0817",
        "0818",
        "0819",
        "0859",
        "0877",
        "0878",
        "0879"
      ],
      "cardtype": {
        "2": "XL Reguler"
      },
      "packet": {
        "2": [
          {
            "id": "3",
            "title": "Rp 5.000",
            "price": "7000"
          }
        ]
      }
    }
  ]
  ';
  $element = array(
    '#name' => t('Sepulsa Index'),
    '#description' => t('List all sepulsa operator data which have packet data.'),
    '#auth' => FALSE,
    '#path' => 'sepulsa',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/api/sepulsa.json',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
    ),
  );
  return $element;
}


/**
 * Function _sepulsa_services_existing_number_doc().
 *
 * Documentation callback for index actions sepulsa.
 */
function _sepulsa_services_existing_number_doc() {
  global $base_url;
  $response = '
  [
	"081314142323",
	"081523444343"
  ]
  ';
  $element = array(
    '#name' => t('Sepulsa Number'),
    '#description' => t('List all sepulsa user existing number.'),
    '#auth' => FALSE,
    '#path' => 'sepulsa/get_number',
    // Example request. E.g., a request URL, headers, and a JSON array.
    '#request_url' => $base_url . '/api/sepulsa/get_number.json',
    // Example response. E.g., a JSON array.
    '#response' => $response,
    // Resource prefix.
    // Errors.
    '#errors' => array(
      'internal_server' => array(
        '#question' => '500 Internal Server Error',
        '#description' => t('Drupal server can not handle the request. Drupal will output nothing.'),
        '#response' => '',
      ),
    ),
  );
  return $element;
}
