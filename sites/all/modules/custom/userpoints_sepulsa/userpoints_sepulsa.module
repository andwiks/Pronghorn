<?php

function userpoints_sepulsa_menu() {
  $items['admin/people/kredit'] = array(
	'title'            => t('Kredit'),
	'description'      => t('Kredit'),
	'page callback'    => 'userpoints_transaction_list',
	'access arguments' => array('administer site configuration'),
	'type'             => MENU_NORMAL_ITEM,
  );
  $items['admin/people/kredit/%/detail'] = array(
	'title'            => t('Kredit Detail'),
	'description'      => t('Kredit Detail'),
	'page callback'    => 'userpoints_transaction_detail',
	'access arguments' => array('administer site configuration'),
	'type'             => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implements hook_commerce_checkout_pane_info().
 */
function userpoints_sepulsa_commerce_checkout_pane_info() {
  $checkout_panes = array();
  $checkout_panes['userpoints_sepulsa'] = array(
    'title' => t('Userpoint Sepulsa'),
    'page' => 'checkout',
    'file' => 'userpoints_sepulsa.checkout_pane.inc',
    'base' => 'userpoints_sepulsa_pane',
    'weight' => 10,
  );

  return $checkout_panes;
}

/**
 * Implements hook_theme().
 */
function userpoints_sepulsa_theme($existing, $type, $theme, $path) {
    return array(
      'userpoints_list_transaction' => array(
        'variables' => array('content' => NULL),
        'template' => 'userpoints_list_transaction', // place you file in 'theme' folder of you module folder
        'path' => drupal_get_path('module', 'userpoints_sepulsa')
      )
    );
}
    
// Override Point Tab from Userpoints Module
function userpoints_sepulsa_menu_alter(&$items) {
    unset($items['user/%user/points']);
    
    $items['user/%user/points'] = array(
        'title' => 'Sepulsa Kredit',
        'title arguments' => userpoints_translation(),
        'page callback' => 'userpoints_list_transaction',
        'page arguments' => array('userpoints_list_transactions', 1),
        //'access callback' => 'userpoints_access_my_points',
        'access callback' => FALSE, // matiin dulu sementara
        'access arguments' => array(1),
        'type' => MENU_LOCAL_TASK,
        'weight' => 1,
    );
}

/**
* Implements hook_block_info().
*/
function userpoints_sepulsa_block_info() {
  $blocks = array();

  $blocks['sepulsa_kredit'] = array(
    'info' => t('Sepulsa Kredit'),
  );

  return $blocks;
}

/**
* Implements hook_block_view().
*/
function userpoints_sepulsa_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'sepulsa_kredit':
      $block['subject'] = '';
      $block['content'] = userpoints_list_transaction();
      break;
  }

  return $block;
}

function userpoints_list_transaction(){
    if (arg(0) == 'user' && is_numeric(arg(1)) && arg(2) == '' ){
        $rows = [];
        global $user;
        $user_uid = arg(1);
        if (!isset($user_uid)) $user_uid = $user->uid;
        $totalamount = userpoints_get_current_points($user_uid, 'all');
        $totalamount = number_format($totalamount,0,",",".");

        $settings = array(
          'show_user' => FALSE,
        );
        $header = userpoints_get_transaction_header($settings);
        //$query = db_select('userpoints_txn', 'p')->extend('PagerDefault')->extend('TableSort')
        $query = db_select('userpoints_txn', 'p')->extend('TableSort')
            ->fields('p')
            ->condition('p.uid', $user_uid)
            ->condition('p.status', '0') // only show approved userpoints
            ->orderByHeader($header)
            ->orderBy('p.txn_id', 'DESC');
            //->limit(variable_get(USERPOINTS_REPORT_LIMIT, 10));

        if (module_exists('taxonomy')) {
          $query->leftJoin('taxonomy_term_data', 't', 'p.tid = t.tid');
        }
        foreach ($query->execute() as $transaction) {
          $rows[] = userpoints_get_transaction_row($transaction, $settings);
        }

        $content['header'] = $header;
        $content['rows'] = $rows;
        $content['totalamount'] = $totalamount;
        return theme('userpoints_list_transaction', array('content' => $content));
    }
}

// Override Hook User View from Userpoints Module
function userpoints_sepulsa_user_view_alter(&$build) {
    //drupal_set_message("<pre>".print_r($build, true)."</pre>");
    //global $user;
    //$amount = userpoints_get_current_points($user->uid);
    //$amount = number_format($amount,0,",",".");
    $build['userpoints']['title']['#markup'] = "";
    $build['userpoints']['total']['#markup'] = "";
    $build['userpoints']['actions']['#links'] = [];
    $build['userpoints']['list']['#items'][0] = "";
}

function userpoints_transaction_list() {
  $header = array("Email", "Points", "Detail");
  
  $query = "SELECT a.uid, SUM(points) as total_point, b.mail FROM userpoints a, users b WHERE a.uid=b.uid GROUP BY uid";
  $result = db_query($query);
  foreach ($result as $row) {
	if ($row->total_point > 0)
	$rows[] = array($row->mail, $row->total_point, l("detail", "admin/people/kredit/".$row->uid."/detail"));
  }
  $return = theme('table', array("header" => $header, "rows" =>$rows));
  
  return $return;
}

function userpoints_transaction_detail() {
  $user_uid = arg(3);
  $settings = array('show_user' => FALSE);
  $header = array("Point", "Category", "Date", "Reason", "Status");
  $query = db_select('userpoints_txn', 'p')->extend('TableSort')
            ->fields('p')
            ->condition('p.uid', $user_uid)
            ->orderBy('p.txn_id', 'DESC');
  if (module_exists('taxonomy')) {
	$query->leftJoin('taxonomy_term_data', 't', 'p.tid = t.tid');
  }
  foreach ($query->execute() as $transaction) {
	$up[] = userpoints_get_transaction_row($transaction, $settings);
  }
  foreach ($up as $row) {
	$rows[] = array(number_format($row['data'][0]['data'],0,",","."), $row['data'][1]['data'], $row['data'][2]['data'], $row['data'][3]['data'], $row['data'][4]['data']);
  }
  
  $totalamount = userpoints_get_current_points($user_uid, 'all');
  $totalamount = number_format($totalamount,0,",",".");
  $return = 'TOTAL POINT: <strong>'.$totalamount.'</strong>';
  $return .= theme('table', array("header" => $header, "rows" =>$rows));
  
  return $return;
}
